{
  "type": "File",
  "start": 0,
  "end": 2363,
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 58,
      "column": 3
    }
  },
  "program": {
    "type": "Program",
    "start": 0,
    "end": 2363,
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 58,
        "column": 3
      }
    },
    "sourceType": "module",
    "body": [],
    "directives": [],
    "leadingComments": null,
    "innerComments": [
      {
        "type": "CommentBlock",
        "value": "*\n * typedef.js\n ",
        "start": 0,
        "end": 21,
        "loc": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @typedef {Object} PKCCiphertextObject - Ciphertext of public key encryption.\n * @property {Uint8Array} data - Encrypted message body.\n * @property {Uint8Array} [salt] - Active only for ECDH+AES\n * @property {Uint8Array} [iv] - Active only for ECDH+AES\n ",
        "start": 23,
        "end": 285,
        "loc": {
          "start": {
            "line": 5,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @typedef {Object} ECKeyGenerationOption - Options for EC key generation.\n * @property {String} [namedCurve='P-256'] - Name of elliptic curve like 'P-256'.\n ",
        "start": 287,
        "end": 452,
        "loc": {
          "start": {
            "line": 12,
            "column": 0
          },
          "end": {
            "line": 15,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @typedef {Object} RSAKeyGenerationOption - Options for RSA key generation.\n * @property {Number} [modulusLength=2048] - Modulus length in bit.\n * @property {Uint8Array} [publicExponent=new Uint8Array([0x01, 0x00, 0x01])] - Public exponent.\n ",
        "start": 454,
        "end": 704,
        "loc": {
          "start": {
            "line": 17,
            "column": 0
          },
          "end": {
            "line": 21,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @typedef {Object} ECSigningOption - Options for EC key signing.\n * @property {'raw'|'der'} format - EC Signature format in DER or Raw.\n ",
        "start": 706,
        "end": 851,
        "loc": {
          "start": {
            "line": 23,
            "column": 0
          },
          "end": {
            "line": 26,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @typedef {Object} RSASigningOption - Options for RSA key signing.\n * @property {'RSA-PSS'|'RSASSA-PKCS1-v1_5'} [name='RSA-PSS'] - 'RSA-PSS' or  'RSASSA-PKCS1-v1_5'.\n * @property {Number} [saltLength] - For RSA-PSS, this must be specified.\n ",
        "start": 853,
        "end": 1102,
        "loc": {
          "start": {
            "line": 28,
            "column": 0
          },
          "end": {
            "line": 32,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @typedef {Object} ECEncryptionOptions - Options for ECDH+AES encryption.\n * @property {Key} privateKey - Private Key Object for ECDH.\n * @property {String} [hash='SHA-256'] - Name of hash algorithm like 'SHA-256'\n * @property {String} [encrypt='AES-GCM'] - Name of encryption algorithm like AES-GCM after ECDH.\n * @property {Number} [keyLength=32] - Key length for AES in octet.\n * @property {Uint8Array|null} [iv=null] - Initial vector for AES-GCM.\n * @property {String} [info=''] - Info for AES-GCM.\n ",
        "start": 1104,
        "end": 1616,
        "loc": {
          "start": {
            "line": 34,
            "column": 0
          },
          "end": {
            "line": 42,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @typedef {Object} ECDecryptionOptions - Options for ECDH+AES decryption.\n * @property {Key} publicKey - Public Key Object for ECDH.\n * @property {String} [hash='SHA-256'] - Name of hash algorithm like 'SHA-256'\n * @property {String} [encrypt='AES-GCM'] - Name of encryption algorithm like AES-GCM after ECDH.\n * @property {Number} [keyLength=32] - Key length for AES in octet.\n * @property {Uint8Array|null} [iv=null] - Initial vector for AES-GCM.\n * @property {String} [info=''] - Info for AES-GCM.\n ",
        "start": 1618,
        "end": 2128,
        "loc": {
          "start": {
            "line": 44,
            "column": 0
          },
          "end": {
            "line": 52,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @typedef {Object} RSAEncryptionOption - Options for RSA-OAEP encryption.\n * @property {String} [hash='SHA-256'] - Name of hash algorithm like 'SHA-256'\n * @property {Uint8Array} [label=new Uint8Array([])] - RSA-OAEP label.\n ",
        "start": 2130,
        "end": 2363,
        "loc": {
          "start": {
            "line": 54,
            "column": 0
          },
          "end": {
            "line": 58,
            "column": 3
          }
        }
      }
    ]
  },
  "comments": [
    {
      "type": "CommentBlock",
      "value": "*\n * typedef.js\n ",
      "start": 0,
      "end": 21,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 3,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} PKCCiphertextObject - Ciphertext of public key encryption.\n * @property {Uint8Array} data - Encrypted message body.\n * @property {Uint8Array} [salt] - Active only for ECDH+AES\n * @property {Uint8Array} [iv] - Active only for ECDH+AES\n ",
      "start": 23,
      "end": 285,
      "loc": {
        "start": {
          "line": 5,
          "column": 0
        },
        "end": {
          "line": 10,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} ECKeyGenerationOption - Options for EC key generation.\n * @property {String} [namedCurve='P-256'] - Name of elliptic curve like 'P-256'.\n ",
      "start": 287,
      "end": 452,
      "loc": {
        "start": {
          "line": 12,
          "column": 0
        },
        "end": {
          "line": 15,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} RSAKeyGenerationOption - Options for RSA key generation.\n * @property {Number} [modulusLength=2048] - Modulus length in bit.\n * @property {Uint8Array} [publicExponent=new Uint8Array([0x01, 0x00, 0x01])] - Public exponent.\n ",
      "start": 454,
      "end": 704,
      "loc": {
        "start": {
          "line": 17,
          "column": 0
        },
        "end": {
          "line": 21,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} ECSigningOption - Options for EC key signing.\n * @property {'raw'|'der'} format - EC Signature format in DER or Raw.\n ",
      "start": 706,
      "end": 851,
      "loc": {
        "start": {
          "line": 23,
          "column": 0
        },
        "end": {
          "line": 26,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} RSASigningOption - Options for RSA key signing.\n * @property {'RSA-PSS'|'RSASSA-PKCS1-v1_5'} [name='RSA-PSS'] - 'RSA-PSS' or  'RSASSA-PKCS1-v1_5'.\n * @property {Number} [saltLength] - For RSA-PSS, this must be specified.\n ",
      "start": 853,
      "end": 1102,
      "loc": {
        "start": {
          "line": 28,
          "column": 0
        },
        "end": {
          "line": 32,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} ECEncryptionOptions - Options for ECDH+AES encryption.\n * @property {Key} privateKey - Private Key Object for ECDH.\n * @property {String} [hash='SHA-256'] - Name of hash algorithm like 'SHA-256'\n * @property {String} [encrypt='AES-GCM'] - Name of encryption algorithm like AES-GCM after ECDH.\n * @property {Number} [keyLength=32] - Key length for AES in octet.\n * @property {Uint8Array|null} [iv=null] - Initial vector for AES-GCM.\n * @property {String} [info=''] - Info for AES-GCM.\n ",
      "start": 1104,
      "end": 1616,
      "loc": {
        "start": {
          "line": 34,
          "column": 0
        },
        "end": {
          "line": 42,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} ECDecryptionOptions - Options for ECDH+AES decryption.\n * @property {Key} publicKey - Public Key Object for ECDH.\n * @property {String} [hash='SHA-256'] - Name of hash algorithm like 'SHA-256'\n * @property {String} [encrypt='AES-GCM'] - Name of encryption algorithm like AES-GCM after ECDH.\n * @property {Number} [keyLength=32] - Key length for AES in octet.\n * @property {Uint8Array|null} [iv=null] - Initial vector for AES-GCM.\n * @property {String} [info=''] - Info for AES-GCM.\n ",
      "start": 1618,
      "end": 2128,
      "loc": {
        "start": {
          "line": 44,
          "column": 0
        },
        "end": {
          "line": 52,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} RSAEncryptionOption - Options for RSA-OAEP encryption.\n * @property {String} [hash='SHA-256'] - Name of hash algorithm like 'SHA-256'\n * @property {Uint8Array} [label=new Uint8Array([])] - RSA-OAEP label.\n ",
      "start": 2130,
      "end": 2363,
      "loc": {
        "start": {
          "line": 54,
          "column": 0
        },
        "end": {
          "line": 58,
          "column": 3
        }
      }
    }
  ],
  "tokens": [
    {
      "type": "CommentBlock",
      "value": "*\n * typedef.js\n ",
      "start": 0,
      "end": 21,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 3,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} PKCCiphertextObject - Ciphertext of public key encryption.\n * @property {Uint8Array} data - Encrypted message body.\n * @property {Uint8Array} [salt] - Active only for ECDH+AES\n * @property {Uint8Array} [iv] - Active only for ECDH+AES\n ",
      "start": 23,
      "end": 285,
      "loc": {
        "start": {
          "line": 5,
          "column": 0
        },
        "end": {
          "line": 10,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} ECKeyGenerationOption - Options for EC key generation.\n * @property {String} [namedCurve='P-256'] - Name of elliptic curve like 'P-256'.\n ",
      "start": 287,
      "end": 452,
      "loc": {
        "start": {
          "line": 12,
          "column": 0
        },
        "end": {
          "line": 15,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} RSAKeyGenerationOption - Options for RSA key generation.\n * @property {Number} [modulusLength=2048] - Modulus length in bit.\n * @property {Uint8Array} [publicExponent=new Uint8Array([0x01, 0x00, 0x01])] - Public exponent.\n ",
      "start": 454,
      "end": 704,
      "loc": {
        "start": {
          "line": 17,
          "column": 0
        },
        "end": {
          "line": 21,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} ECSigningOption - Options for EC key signing.\n * @property {'raw'|'der'} format - EC Signature format in DER or Raw.\n ",
      "start": 706,
      "end": 851,
      "loc": {
        "start": {
          "line": 23,
          "column": 0
        },
        "end": {
          "line": 26,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} RSASigningOption - Options for RSA key signing.\n * @property {'RSA-PSS'|'RSASSA-PKCS1-v1_5'} [name='RSA-PSS'] - 'RSA-PSS' or  'RSASSA-PKCS1-v1_5'.\n * @property {Number} [saltLength] - For RSA-PSS, this must be specified.\n ",
      "start": 853,
      "end": 1102,
      "loc": {
        "start": {
          "line": 28,
          "column": 0
        },
        "end": {
          "line": 32,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} ECEncryptionOptions - Options for ECDH+AES encryption.\n * @property {Key} privateKey - Private Key Object for ECDH.\n * @property {String} [hash='SHA-256'] - Name of hash algorithm like 'SHA-256'\n * @property {String} [encrypt='AES-GCM'] - Name of encryption algorithm like AES-GCM after ECDH.\n * @property {Number} [keyLength=32] - Key length for AES in octet.\n * @property {Uint8Array|null} [iv=null] - Initial vector for AES-GCM.\n * @property {String} [info=''] - Info for AES-GCM.\n ",
      "start": 1104,
      "end": 1616,
      "loc": {
        "start": {
          "line": 34,
          "column": 0
        },
        "end": {
          "line": 42,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} ECDecryptionOptions - Options for ECDH+AES decryption.\n * @property {Key} publicKey - Public Key Object for ECDH.\n * @property {String} [hash='SHA-256'] - Name of hash algorithm like 'SHA-256'\n * @property {String} [encrypt='AES-GCM'] - Name of encryption algorithm like AES-GCM after ECDH.\n * @property {Number} [keyLength=32] - Key length for AES in octet.\n * @property {Uint8Array|null} [iv=null] - Initial vector for AES-GCM.\n * @property {String} [info=''] - Info for AES-GCM.\n ",
      "start": 1618,
      "end": 2128,
      "loc": {
        "start": {
          "line": 44,
          "column": 0
        },
        "end": {
          "line": 52,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} RSAEncryptionOption - Options for RSA-OAEP encryption.\n * @property {String} [hash='SHA-256'] - Name of hash algorithm like 'SHA-256'\n * @property {Uint8Array} [label=new Uint8Array([])] - RSA-OAEP label.\n ",
      "start": 2130,
      "end": 2363,
      "loc": {
        "start": {
          "line": 54,
          "column": 0
        },
        "end": {
          "line": 58,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "eof",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2363,
      "end": 2363,
      "loc": {
        "start": {
          "line": 58,
          "column": 3
        },
        "end": {
          "line": 58,
          "column": 3
        }
      }
    }
  ]
}